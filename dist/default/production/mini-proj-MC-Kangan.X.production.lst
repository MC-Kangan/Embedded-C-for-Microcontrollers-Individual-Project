

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Feb 04 19:01:09 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.35
    23                           ; Generated 05/05/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F67K40 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _LATHbits	set	3968
    58  0000                     _CM1CON1bits	set	3793
    59  0000                     _PIE0bits	set	3625
    60  0000                     _DAC1CON0bits	set	3782
    61  0000                     _LATAbits	set	3961
    62  0000                     _LATGbits	set	3967
    63  0000                     _TRISAbits	set	3969
    64  0000                     _TRISGbits	set	3975
    65  0000                     _TMR0L	set	4051
    66  0000                     _TMR0H	set	4052
    67  0000                     _T0CON0bits	set	4053
    68  0000                     _T0CON1bits	set	4054
    69  0000                     _TRISHbits	set	3976
    70  0000                     _INTCONbits	set	4082
    71  0000                     _TRISBbits	set	3970
    72  0000                     _TRISFbits	set	3974
    73  0000                     _LATBbits	set	3962
    74  0000                     _LATFbits	set	3966
    75  0000                     _CM1CON0bits	set	3792
    76  0000                     _CM1NCHbits	set	3794
    77  0000                     _DAC1CON1bits	set	3783
    78  0000                     _CMOUTbits	set	3796
    79  0000                     _CM1PCHbits	set	3795
    80  0000                     _PIE2bits	set	3627
    81  0000                     _PIR0bits	set	3635
    82  0000                     _PIR2bits	set	3637
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87  0002CC                     __pcinit:
    88                           	callstack 0
    89  0002CC                     start_initialization:
    90                           	callstack 0
    91  0002CC                     __initialization:
    92                           	callstack 0
    93                           
    94                           ; Clear objects allocated to COMRAM (10 bytes)
    95  0002CC  EE00  F001         	lfsr	0,__pbssCOMRAM
    96  0002D0  0E0A               	movlw	10
    97  0002D2                     clear_0:
    98  0002D2  6AEE               	clrf	postinc0,c
    99  0002D4  06E8               	decf	wreg,f,c
   100  0002D6  E1FD               	bnz	clear_0
   101  0002D8                     end_of_initialization:
   102                           	callstack 0
   103  0002D8                     __end_of__initialization:
   104                           	callstack 0
   105  0002D8  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   106  0002DA  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   107  0002DC  0100               	movlb	0
   108  0002DE  EF40  F000         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	bssCOMRAM
   111  000001                     __pbssCOMRAM:
   112                           	callstack 0
   113  000001                     _min_accu:
   114                           	callstack 0
   115  000001                     	ds	2
   116  000003                     _sun_rise:
   117                           	callstack 0
   118  000003                     	ds	2
   119  000005                     _sun_set:
   120                           	callstack 0
   121  000005                     	ds	2
   122  000007                     _second:
   123                           	callstack 0
   124  000007                     	ds	2
   125  000009                     _hour:
   126                           	callstack 0
   127  000009                     	ds	1
   128  00000A                     _minute:
   129                           	callstack 0
   130  00000A                     	ds	1
   131                           
   132                           	psect	cstackCOMRAM
   133  00000B                     __pcstackCOMRAM:
   134                           	callstack 0
   135  00000B                     ??_HighISR:
   136                           
   137                           ; 1 bytes @ 0x0
   138  00000B                     	ds	1
   139  00000C                     LEDarray_disp_bin@number:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x1
   143  00000C                     	ds	2
   144  00000E                     ??_main:
   145                           
   146                           ; 1 bytes @ 0x3
   147  00000E                     	ds	4
   148                           
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 24 in file "main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, status,2, status,0, cstack
   163 ;; Tracked objects:
   164 ;;		On entry : 0/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   172 ;;Total ram usage:        4 bytes
   173 ;; Hardware stack levels required when called: 3
   174 ;; This function calls:
   175 ;;		_Comp1_init
   176 ;;		_Interrupts_init
   177 ;;		_LEDarray_disp_bin
   178 ;;		_LEDarray_init
   179 ;;		_Timer0_init
   180 ;; This function is called by:
   181 ;;		Startup code after reset
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text0
   186  000080                     __ptext0:
   187                           	callstack 0
   188  000080                     _main:
   189                           	callstack 28
   190  000080                     
   191                           ;main.c: 28:     LATHbits.LATH3 = 1;
   192  000080  8680               	bsf	128,3,c	;volatile
   193                           
   194                           ;main.c: 29:     TRISHbits.TRISH3 = 0;
   195  000082  9688               	bcf	136,3,c	;volatile
   196  000084                     
   197                           ;main.c: 31:     Interrupts_init();
   198  000084  EC7B  F001         	call	_Interrupts_init	;wreg free
   199  000088                     
   200                           ;main.c: 32:     Comp1_init();
   201  000088  EC43  F001         	call	_Comp1_init	;wreg free
   202  00008C                     
   203                           ;main.c: 33:     Timer0_init();
   204  00008C  EC56  F001         	call	_Timer0_init	;wreg free
   205                           
   206                           ;main.c: 34:     LEDarray_init();
   207  000090  EC30  F001         	call	_LEDarray_init	;wreg free
   208  000094                     l1185:
   209                           
   210                           ;main.c: 38:         if (second == 1) {minute += 1; min_accu += 1; second = 0;}
   211  000094  0407               	decf	_second^0,w,c
   212  000096  1008               	iorwf	(_second+1)^0,w,c
   213  000098  A4D8               	btfss	status,2,c
   214  00009A  EF51  F000         	goto	u971
   215  00009E  EF53  F000         	goto	u970
   216  0000A2                     u971:
   217  0000A2  EF5A  F000         	goto	l1191
   218  0000A6                     u970:
   219  0000A6  2A0A               	incf	_minute^0,f,c
   220  0000A8  4A01               	infsnz	_min_accu^0,f,c
   221  0000AA  2A02               	incf	(_min_accu+1)^0,f,c
   222  0000AC  0E00               	movlw	0
   223  0000AE  6E08               	movwf	(_second+1)^0,c
   224  0000B0  0E00               	movlw	0
   225  0000B2  6E07               	movwf	_second^0,c
   226  0000B4                     l1191:
   227                           
   228                           ;main.c: 39:         if (minute == 1) {hour += 1; minute = 0;}
   229  0000B4  040A               	decf	_minute^0,w,c
   230  0000B6  A4D8               	btfss	status,2,c
   231  0000B8  EF60  F000         	goto	u981
   232  0000BC  EF62  F000         	goto	u980
   233  0000C0                     u981:
   234  0000C0  EF65  F000         	goto	l1197
   235  0000C4                     u980:
   236  0000C4  2A09               	incf	_hour^0,f,c
   237  0000C6  0E00               	movlw	0
   238  0000C8  6E0A               	movwf	_minute^0,c
   239  0000CA                     l1197:
   240                           
   241                           ;main.c: 40:         if (hour == 24) {hour = 0; min_accu = 0; sun_rise = 0; sun_set = 0;
      +                          }
   242  0000CA  0E18               	movlw	24
   243  0000CC  1809               	xorwf	_hour^0,w,c
   244  0000CE  A4D8               	btfss	status,2,c
   245  0000D0  EF6C  F000         	goto	u991
   246  0000D4  EF6E  F000         	goto	u990
   247  0000D8                     u991:
   248  0000D8  EF7C  F000         	goto	l139
   249  0000DC                     u990:
   250  0000DC  0E00               	movlw	0
   251  0000DE  6E09               	movwf	_hour^0,c
   252  0000E0  0E00               	movlw	0
   253  0000E2  6E02               	movwf	(_min_accu+1)^0,c
   254  0000E4  0E00               	movlw	0
   255  0000E6  6E01               	movwf	_min_accu^0,c
   256  0000E8  0E00               	movlw	0
   257  0000EA  6E04               	movwf	(_sun_rise+1)^0,c
   258  0000EC  0E00               	movlw	0
   259  0000EE  6E03               	movwf	_sun_rise^0,c
   260  0000F0  0E00               	movlw	0
   261  0000F2  6E06               	movwf	(_sun_set+1)^0,c
   262  0000F4  0E00               	movlw	0
   263  0000F6  6E05               	movwf	_sun_set^0,c
   264  0000F8                     l139:
   265                           
   266                           ;main.c: 42:         if ((hour >= 1) && (hour < 5)){LATHbits.LATH3 = 0;}
   267  0000F8  5009               	movf	_hour^0,w,c
   268  0000FA  B4D8               	btfsc	status,2,c
   269  0000FC  EF82  F000         	goto	u1001
   270  000100  EF84  F000         	goto	u1000
   271  000104                     u1001:
   272  000104  EF8F  F000         	goto	l1205
   273  000108                     u1000:
   274  000108  0E05               	movlw	5
   275  00010A  6009               	cpfslt	_hour^0,c
   276  00010C  EF8A  F000         	goto	u1011
   277  000110  EF8C  F000         	goto	u1010
   278  000114                     u1011:
   279  000114  EF8F  F000         	goto	l1205
   280  000118                     u1010:
   281  000118  9680               	bcf	128,3,c	;volatile
   282  00011A  EFA4  F000         	goto	l1211
   283  00011E                     l1205:
   284  00011E  0E05               	movlw	5
   285  000120  1809               	xorwf	_hour^0,w,c
   286  000122  A4D8               	btfss	status,2,c
   287  000124  EF96  F000         	goto	u1021
   288  000128  EF98  F000         	goto	u1020
   289  00012C                     u1021:
   290  00012C  EFA4  F000         	goto	l1211
   291  000130                     u1020:
   292  000130                     
   293                           ;main.c: 44:             if (CMOUTbits.MC1OUT == 1){LATHbits.LATH3 = 1;}
   294  000130  010E               	movlb	14	; () banked
   295  000132  A1D4               	btfss	212,0,b	;volatile
   296  000134  EF9E  F000         	goto	u1031
   297  000138  EFA0  F000         	goto	u1030
   298  00013C                     u1031:
   299  00013C  EFA3  F000         	goto	l143
   300  000140                     u1030:
   301  000140                     
   302                           ; BSR set to: 14
   303  000140  8680               	bsf	128,3,c	;volatile
   304  000142  EFA4  F000         	goto	l1211
   305  000146                     l143:
   306                           
   307                           ; BSR set to: 14
   308  000146  9680               	bcf	128,3,c	;volatile
   309  000148                     l1211:
   310                           
   311                           ;main.c: 48:         if (sun_rise > 0 && sun_set > 0){
   312  000148  5003               	movf	_sun_rise^0,w,c
   313  00014A  1004               	iorwf	(_sun_rise+1)^0,w,c
   314  00014C  B4D8               	btfsc	status,2,c
   315  00014E  EFAB  F000         	goto	u1041
   316  000152  EFAD  F000         	goto	u1040
   317  000156                     u1041:
   318  000156  EFCE  F000         	goto	l1223
   319  00015A                     u1040:
   320  00015A  5005               	movf	_sun_set^0,w,c
   321  00015C  1006               	iorwf	(_sun_set+1)^0,w,c
   322  00015E  B4D8               	btfsc	status,2,c
   323  000160  EFB4  F000         	goto	u1051
   324  000164  EFB6  F000         	goto	u1050
   325  000168                     u1051:
   326  000168  EFCE  F000         	goto	l1223
   327  00016C                     u1050:
   328  00016C                     
   329                           ;main.c: 50:             hour = 12 + ((sun_set - sun_rise)/2)/1;
   330  00016C  5003               	movf	_sun_rise^0,w,c
   331  00016E  5C05               	subwf	_sun_set^0,w,c
   332  000170  6E0E               	movwf	??_main^0,c
   333  000172  5004               	movf	(_sun_rise+1)^0,w,c
   334  000174  5806               	subwfb	(_sun_set+1)^0,w,c
   335  000176  6E0F               	movwf	(??_main+1)^0,c
   336  000178  90D8               	bcf	status,0,c
   337  00017A  300F               	rrcf	(??_main+1)^0,w,c
   338  00017C  6E11               	movwf	(??_main+3)^0,c
   339  00017E  300E               	rrcf	??_main^0,w,c
   340  000180  6E10               	movwf	(??_main+2)^0,c
   341  000182  5010               	movf	(??_main+2)^0,w,c
   342  000184  0F0C               	addlw	12
   343  000186  6E09               	movwf	_hour^0,c
   344  000188                     
   345                           ;main.c: 51:             minute = ((sun_set - sun_rise)/2) % 1;
   346  000188  0E00               	movlw	0
   347  00018A  6E0A               	movwf	_minute^0,c
   348  00018C                     
   349                           ;main.c: 52:             sun_rise = 0;
   350  00018C  0E00               	movlw	0
   351  00018E  6E04               	movwf	(_sun_rise+1)^0,c
   352  000190  0E00               	movlw	0
   353  000192  6E03               	movwf	_sun_rise^0,c
   354  000194                     
   355                           ;main.c: 53:             sun_set = 0;
   356  000194  0E00               	movlw	0
   357  000196  6E06               	movwf	(_sun_set+1)^0,c
   358  000198  0E00               	movlw	0
   359  00019A  6E05               	movwf	_sun_set^0,c
   360  00019C                     l1223:
   361                           
   362                           ;main.c: 57:   LEDarray_disp_bin(hour);
   363  00019C  C009  F00C         	movff	_hour,LEDarray_disp_bin@number
   364  0001A0  6A0D               	clrf	(LEDarray_disp_bin@number+1)^0,c
   365  0001A2  ECD7  F000         	call	_LEDarray_disp_bin	;wreg free
   366  0001A6  EF4A  F000         	goto	l1185
   367  0001AA  EF3E  F000         	goto	start
   368  0001AE                     __end_of_main:
   369                           	callstack 0
   370                           
   371 ;; *************** function _Timer0_init *****************
   372 ;; Defined at:
   373 ;;		line 7 in file "timers.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text1
   402  0002AC                     __ptext1:
   403                           	callstack 0
   404  0002AC                     _Timer0_init:
   405                           	callstack 29
   406  0002AC                     
   407                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   408  0002AC  50D6               	movf	214,w,c	;volatile
   409  0002AE  0B1F               	andlw	-225
   410  0002B0  0940               	iorlw	64
   411  0002B2  6ED6               	movwf	214,c	;volatile
   412  0002B4                     
   413                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   414  0002B4  88D6               	bsf	214,4,c	;volatile
   415                           
   416                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
   417  0002B6  50D6               	movf	214,w,c	;volatile
   418  0002B8  0BF0               	andlw	-16
   419  0002BA  0908               	iorlw	8
   420  0002BC  6ED6               	movwf	214,c	;volatile
   421  0002BE                     
   422                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
   423  0002BE  88D5               	bsf	213,4,c	;volatile
   424                           
   425                           ;timers.c: 15:     TMR0H = 0b00001011;
   426  0002C0  0E0B               	movlw	11
   427  0002C2  6ED4               	movwf	212,c	;volatile
   428                           
   429                           ;timers.c: 16:     TMR0L = 0b11011011;
   430  0002C4  0EDB               	movlw	219
   431  0002C6  6ED3               	movwf	211,c	;volatile
   432  0002C8                     
   433                           ;timers.c: 18:     T0CON0bits.T0EN=1;
   434  0002C8  8ED5               	bsf	213,7,c	;volatile
   435  0002CA  0012               	return		;funcret
   436  0002CC                     __end_of_Timer0_init:
   437                           	callstack 0
   438                           
   439 ;; *************** function _LEDarray_init *****************
   440 ;; Defined at:
   441 ;;		line 9 in file "LEDarray.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		None
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text2
   470  000260                     __ptext2:
   471                           	callstack 0
   472  000260                     _LEDarray_init:
   473                           	callstack 29
   474  000260                     
   475                           ;LEDarray.c: 11:     TRISGbits.TRISG0 = 0;
   476  000260  9087               	bcf	135,0,c	;volatile
   477                           
   478                           ;LEDarray.c: 12:     TRISGbits.TRISG1 = 0;
   479  000262  9287               	bcf	135,1,c	;volatile
   480                           
   481                           ;LEDarray.c: 13:     TRISAbits.TRISA2 = 0;
   482  000264  9481               	bcf	129,2,c	;volatile
   483                           
   484                           ;LEDarray.c: 14:     TRISFbits.TRISF6 = 0;
   485  000266  9C86               	bcf	134,6,c	;volatile
   486                           
   487                           ;LEDarray.c: 15:     TRISAbits.TRISA4 = 0;
   488  000268  9881               	bcf	129,4,c	;volatile
   489                           
   490                           ;LEDarray.c: 16:     TRISAbits.TRISA5 = 0;
   491  00026A  9A81               	bcf	129,5,c	;volatile
   492                           
   493                           ;LEDarray.c: 17:     TRISFbits.TRISF0 = 0;
   494  00026C  9086               	bcf	134,0,c	;volatile
   495                           
   496                           ;LEDarray.c: 18:     TRISBbits.TRISB0 = 0;
   497  00026E  9082               	bcf	130,0,c	;volatile
   498                           
   499                           ;LEDarray.c: 19:     TRISBbits.TRISB1 = 0;
   500  000270  9282               	bcf	130,1,c	;volatile
   501                           
   502                           ;LEDarray.c: 22:     LATGbits.LATG0 = 0;
   503  000272  907F               	bcf	127,0,c	;volatile
   504                           
   505                           ;LEDarray.c: 23:     LATGbits.LATG1 = 0;
   506  000274  927F               	bcf	127,1,c	;volatile
   507                           
   508                           ;LEDarray.c: 24:     LATAbits.LATA2 = 0;
   509  000276  9479               	bcf	121,2,c	;volatile
   510                           
   511                           ;LEDarray.c: 25:     LATFbits.LATF6 = 0;
   512  000278  9C7E               	bcf	126,6,c	;volatile
   513                           
   514                           ;LEDarray.c: 26:     LATAbits.LATA4 = 0;
   515  00027A  9879               	bcf	121,4,c	;volatile
   516                           
   517                           ;LEDarray.c: 27:     LATAbits.LATA5 = 0;
   518  00027C  9A79               	bcf	121,5,c	;volatile
   519                           
   520                           ;LEDarray.c: 28:     LATFbits.LATF0 = 0;
   521  00027E  907E               	bcf	126,0,c	;volatile
   522                           
   523                           ;LEDarray.c: 29:     LATBbits.LATB0 = 0;
   524  000280  907A               	bcf	122,0,c	;volatile
   525                           
   526                           ;LEDarray.c: 30:     LATBbits.LATB1 = 0;
   527  000282  927A               	bcf	122,1,c	;volatile
   528  000284  0012               	return		;funcret
   529  000286                     __end_of_LEDarray_init:
   530                           	callstack 0
   531                           
   532 ;; *************** function _LEDarray_disp_bin *****************
   533 ;; Defined at:
   534 ;;		line 39 in file "LEDarray.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  number          2    1[COMRAM] unsigned int 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		None
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   552 ;;Total ram usage:        2 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;;		_LEDarray_disp_dec
   560 ;;		_LEDarray_disp_PPM
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text3
   565  0001AE                     __ptext3:
   566                           	callstack 0
   567  0001AE                     _LEDarray_disp_bin:
   568                           	callstack 29
   569  0001AE                     
   570                           ;LEDarray.c: 39: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 40: {;LEDarray.
      +                          c: 48:     if (number & 0b00000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
   571  0001AE  A00C               	btfss	LEDarray_disp_bin@number^0,0,c
   572  0001B0  EFDC  F000         	goto	u561
   573  0001B4  EFDE  F000         	goto	u560
   574  0001B8                     u561:
   575  0001B8  EFE1  F000         	goto	l22
   576  0001BC                     u560:
   577  0001BC  807F               	bsf	127,0,c	;volatile
   578  0001BE  EFE2  F000         	goto	l23
   579  0001C2                     l22:
   580  0001C2  907F               	bcf	127,0,c	;volatile
   581  0001C4                     l23:
   582                           
   583                           ;LEDarray.c: 49:     if (number & 0b00000010) { LATGbits.LATG1=1;} else { LATGbits.LATG1
      +                          =0;}
   584  0001C4  A20C               	btfss	LEDarray_disp_bin@number^0,1,c
   585  0001C6  EFE7  F000         	goto	u571
   586  0001CA  EFE9  F000         	goto	u570
   587  0001CE                     u571:
   588  0001CE  EFEC  F000         	goto	l24
   589  0001D2                     u570:
   590  0001D2  827F               	bsf	127,1,c	;volatile
   591  0001D4  EFED  F000         	goto	l25
   592  0001D8                     l24:
   593  0001D8  927F               	bcf	127,1,c	;volatile
   594  0001DA                     l25:
   595                           
   596                           ;LEDarray.c: 50:     if (number & 0b00000100) { LATAbits.LATA2=1;} else { LATAbits.LATA2
      +                          =0;}
   597  0001DA  A40C               	btfss	LEDarray_disp_bin@number^0,2,c
   598  0001DC  EFF2  F000         	goto	u581
   599  0001E0  EFF4  F000         	goto	u580
   600  0001E4                     u581:
   601  0001E4  EFF7  F000         	goto	l26
   602  0001E8                     u580:
   603  0001E8  8479               	bsf	121,2,c	;volatile
   604  0001EA  EFF8  F000         	goto	l27
   605  0001EE                     l26:
   606  0001EE  9479               	bcf	121,2,c	;volatile
   607  0001F0                     l27:
   608                           
   609                           ;LEDarray.c: 51:     if (number & 0b00001000) { LATFbits.LATF6=1;} else { LATFbits.LATF6
      +                          =0;}
   610  0001F0  A60C               	btfss	LEDarray_disp_bin@number^0,3,c
   611  0001F2  EFFD  F000         	goto	u591
   612  0001F6  EFFF  F000         	goto	u590
   613  0001FA                     u591:
   614  0001FA  EF02  F001         	goto	l28
   615  0001FE                     u590:
   616  0001FE  8C7E               	bsf	126,6,c	;volatile
   617  000200  EF03  F001         	goto	l29
   618  000204                     l28:
   619  000204  9C7E               	bcf	126,6,c	;volatile
   620  000206                     l29:
   621                           
   622                           ;LEDarray.c: 52:     if (number & 0b00010000) { LATAbits.LATA4=1;} else { LATAbits.LATA4
      +                          =0;}
   623  000206  A80C               	btfss	LEDarray_disp_bin@number^0,4,c
   624  000208  EF08  F001         	goto	u601
   625  00020C  EF0A  F001         	goto	u600
   626  000210                     u601:
   627  000210  EF0D  F001         	goto	l30
   628  000214                     u600:
   629  000214  8879               	bsf	121,4,c	;volatile
   630  000216  EF0E  F001         	goto	l31
   631  00021A                     l30:
   632  00021A  9879               	bcf	121,4,c	;volatile
   633  00021C                     l31:
   634                           
   635                           ;LEDarray.c: 53:     if (number & 0b00100000) { LATAbits.LATA5=1;} else { LATAbits.LATA5
      +                          =0;}
   636  00021C  AA0C               	btfss	LEDarray_disp_bin@number^0,5,c
   637  00021E  EF13  F001         	goto	u611
   638  000222  EF15  F001         	goto	u610
   639  000226                     u611:
   640  000226  EF18  F001         	goto	l32
   641  00022A                     u610:
   642  00022A  8A79               	bsf	121,5,c	;volatile
   643  00022C  EF19  F001         	goto	l33
   644  000230                     l32:
   645  000230  9A79               	bcf	121,5,c	;volatile
   646  000232                     l33:
   647                           
   648                           ;LEDarray.c: 54:     if (number & 0b01000000) { LATFbits.LATF0=1;} else { LATFbits.LATF0
      +                          =0;}
   649  000232  AC0C               	btfss	LEDarray_disp_bin@number^0,6,c
   650  000234  EF1E  F001         	goto	u621
   651  000238  EF20  F001         	goto	u620
   652  00023C                     u621:
   653  00023C  EF23  F001         	goto	l34
   654  000240                     u620:
   655  000240  807E               	bsf	126,0,c	;volatile
   656  000242  EF24  F001         	goto	l35
   657  000246                     l34:
   658  000246  907E               	bcf	126,0,c	;volatile
   659  000248                     l35:
   660                           
   661                           ;LEDarray.c: 55:     if (number & 0b10000000) { LATBbits.LATB0=1;} else { LATBbits.LATB0
      +                          =0;}
   662  000248  AE0C               	btfss	LEDarray_disp_bin@number^0,7,c
   663  00024A  EF29  F001         	goto	u631
   664  00024E  EF2B  F001         	goto	u630
   665  000252                     u631:
   666  000252  EF2E  F001         	goto	l36
   667  000256                     u630:
   668  000256  807A               	bsf	122,0,c	;volatile
   669  000258  EF2F  F001         	goto	l38
   670  00025C                     l36:
   671  00025C  907A               	bcf	122,0,c	;volatile
   672  00025E                     l38:
   673  00025E  0012               	return		;funcret
   674  000260                     __end_of_LEDarray_disp_bin:
   675                           	callstack 0
   676                           
   677 ;; *************** function _Interrupts_init *****************
   678 ;; Defined at:
   679 ;;		line 12 in file "interrupts.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		None
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text4
   708  0002F6                     __ptext4:
   709                           	callstack 0
   710  0002F6                     _Interrupts_init:
   711                           	callstack 29
   712  0002F6                     
   713                           ;interrupts.c: 16:     INTCONbits.IPEN = 1;
   714  0002F6  8AF2               	bsf	242,5,c	;volatile
   715                           
   716                           ;interrupts.c: 17:     INTCONbits.GIEL = 1;
   717  0002F8  8CF2               	bsf	242,6,c	;volatile
   718                           
   719                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
   720  0002FA  010E               	movlb	14	; () banked
   721  0002FC  8B29               	bsf	41,5,b	;volatile
   722                           
   723                           ;interrupts.c: 22:     PIE2bits.C1IE = 1;
   724  0002FE  812B               	bsf	43,0,b	;volatile
   725                           
   726                           ;interrupts.c: 24:     INTCONbits.GIE=1;
   727  000300  8EF2               	bsf	242,7,c	;volatile
   728  000302                     
   729                           ; BSR set to: 14
   730  000302  0012               	return		;funcret
   731  000304                     __end_of_Interrupts_init:
   732                           	callstack 0
   733                           
   734 ;; *************** function _Comp1_init *****************
   735 ;; Defined at:
   736 ;;		line 22 in file "comparator.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;Total ram usage:        0 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 2
   757 ;; This function calls:
   758 ;;		_DAC_init
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text5
   765  000286                     __ptext5:
   766                           	callstack 0
   767  000286                     _Comp1_init:
   768                           	callstack 28
   769  000286                     
   770                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
   771  000286  8E86               	bsf	134,7,c	;volatile
   772  000288                     
   773                           ;comparator.c: 25:     CM1NCHbits.NCH=0b011;
   774  000288  010E               	movlb	14	; () banked
   775  00028A  51D2               	movf	210,w,b	;volatile
   776  00028C  0BF8               	andlw	-8
   777  00028E  0903               	iorlw	3
   778  000290  6FD2               	movwf	210,b	;volatile
   779                           
   780                           ;comparator.c: 26:     CM1PCHbits.PCH=0b101;
   781  000292  51D3               	movf	211,w,b	;volatile
   782  000294  0BF8               	andlw	-8
   783  000296  0905               	iorlw	5
   784  000298  6FD3               	movwf	211,b	;volatile
   785  00029A                     
   786                           ; BSR set to: 14
   787                           ;comparator.c: 27:     CM1CON0bits.HYS=1;
   788  00029A  83D0               	bsf	208,1,b	;volatile
   789  00029C                     
   790                           ; BSR set to: 14
   791                           ;comparator.c: 28:     CM1CON0bits.POL=1;
   792  00029C  89D0               	bsf	208,4,b	;volatile
   793  00029E                     
   794                           ; BSR set to: 14
   795                           ;comparator.c: 29:     CM1CON1bits.INTP=1;
   796  00029E  83D1               	bsf	209,1,b	;volatile
   797  0002A0                     
   798                           ; BSR set to: 14
   799                           ;comparator.c: 30:     CM1CON1bits.INTN=1;
   800  0002A0  81D1               	bsf	209,0,b	;volatile
   801  0002A2                     
   802                           ; BSR set to: 14
   803                           ;comparator.c: 31:     DAC_init();
   804  0002A2  EC71  F001         	call	_DAC_init	;wreg free
   805  0002A6                     
   806                           ;comparator.c: 32:     CM1CON0bits.EN=1;
   807  0002A6  010E               	movlb	14	; () banked
   808  0002A8  8FD0               	bsf	208,7,b	;volatile
   809  0002AA                     
   810                           ; BSR set to: 14
   811  0002AA  0012               	return		;funcret
   812  0002AC                     __end_of_Comp1_init:
   813                           	callstack 0
   814                           
   815 ;; *************** function _DAC_init *****************
   816 ;; Defined at:
   817 ;;		line 7 in file "comparator.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_Comp1_init
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text6
   846  0002E2                     __ptext6:
   847                           	callstack 0
   848  0002E2                     _DAC_init:
   849                           	callstack 28
   850  0002E2                     
   851                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
   852  0002E2  0EF3               	movlw	-13
   853  0002E4  010E               	movlb	14	; () banked
   854  0002E6  17C6               	andwf	198,f,b	;volatile
   855  0002E8                     
   856                           ; BSR set to: 14
   857                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
   858  0002E8  91C6               	bcf	198,0,b	;volatile
   859                           
   860                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=0b11011;
   861  0002EA  51C7               	movf	199,w,b	;volatile
   862  0002EC  0BE0               	andlw	-32
   863  0002EE  091B               	iorlw	27
   864  0002F0  6FC7               	movwf	199,b	;volatile
   865  0002F2                     
   866                           ; BSR set to: 14
   867                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
   868  0002F2  8FC6               	bsf	198,7,b	;volatile
   869  0002F4                     
   870                           ; BSR set to: 14
   871  0002F4  0012               	return		;funcret
   872  0002F6                     __end_of_DAC_init:
   873                           	callstack 0
   874                           
   875 ;; *************** function _HighISR *****************
   876 ;; Defined at:
   877 ;;		line 67 in file "main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   895 ;;Total ram usage:        1 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		Interrupt level 2
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	intcode
   905  000008                     __pintcode:
   906                           	callstack 0
   907  000008                     _HighISR:
   908                           	callstack 28
   909                           
   910                           ; BSR set to: 14
   911                           ;incstack = 0
   912  000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   913  00000A                     
   914                           ;main.c: 70:     if (PIR2bits.C1IF){
   915  00000A  010E               	movlb	14	; () banked
   916  00000C  A135               	btfss	53,0,b	;volatile
   917  00000E  EF0B  F000         	goto	i2u51_41
   918  000012  EF0D  F000         	goto	i2u51_40
   919  000016                     i2u51_41:
   920  000016  EF32  F000         	goto	i2l153
   921  00001A                     i2u51_40:
   922  00001A                     
   923                           ; BSR set to: 14
   924                           ;main.c: 71:         LATHbits.LATH3 = !LATHbits.LATH3;
   925  00001A  A680               	btfss	128,3,c	;volatile
   926  00001C  EF12  F000         	goto	i2u52_41
   927  000020  EF16  F000         	goto	i2u52_40
   928  000024                     i2u52_41:
   929  000024  6A0B               	clrf	??_HighISR^0,c
   930  000026  2A0B               	incf	??_HighISR^0,f,c
   931  000028  EF17  F000         	goto	i2u53_48
   932  00002C                     i2u52_40:
   933  00002C  6A0B               	clrf	??_HighISR^0,c
   934  00002E                     i2u53_48:
   935  00002E  460B               	rlncf	??_HighISR^0,f,c
   936  000030  460B               	rlncf	??_HighISR^0,f,c
   937  000032  460B               	rlncf	??_HighISR^0,f,c
   938  000034  5080               	movf	128,w,c	;volatile
   939  000036  180B               	xorwf	??_HighISR^0,w,c
   940  000038  0BF7               	andlw	-9
   941  00003A  180B               	xorwf	??_HighISR^0,w,c
   942  00003C  6E80               	movwf	128,c	;volatile
   943  00003E                     
   944                           ;main.c: 72:         if (LATHbits.LATH3){sun_set = min_accu;} else {sun_rise = min_accu;
      +                          }
   945  00003E  A680               	btfss	128,3,c	;volatile
   946  000040  EF24  F000         	goto	i2u54_41
   947  000044  EF26  F000         	goto	i2u54_40
   948  000048                     i2u54_41:
   949  000048  EF2C  F000         	goto	i2l154
   950  00004C                     i2u54_40:
   951  00004C  C001  F005         	movff	_min_accu,_sun_set
   952  000050  C002  F006         	movff	_min_accu+1,_sun_set+1
   953  000054  EF30  F000         	goto	i2l155
   954  000058                     i2l154:
   955  000058  C001  F003         	movff	_min_accu,_sun_rise
   956  00005C  C002  F004         	movff	_min_accu+1,_sun_rise+1
   957  000060                     i2l155:
   958                           
   959                           ;main.c: 73:         PIR2bits.C1IF = 0; }
   960  000060  010E               	movlb	14	; () banked
   961  000062  9135               	bcf	53,0,b	;volatile
   962  000064                     i2l153:
   963                           
   964                           ; BSR set to: 14
   965                           ;main.c: 75:     if (PIR0bits.TMR0IF){
   966  000064  AB33               	btfss	51,5,b	;volatile
   967  000066  EF37  F000         	goto	i2u55_41
   968  00006A  EF39  F000         	goto	i2u55_40
   969  00006E                     i2u55_41:
   970  00006E  EF3C  F000         	goto	i2l157
   971  000072                     i2u55_40:
   972  000072                     
   973                           ; BSR set to: 14
   974                           ;main.c: 76:         second += 1;
   975  000072  4A07               	infsnz	_second^0,f,c
   976  000074  2A08               	incf	(_second+1)^0,f,c
   977  000076                     
   978                           ; BSR set to: 14
   979                           ;main.c: 77:         PIR0bits.TMR0IF = 0; }
   980  000076  9B33               	bcf	51,5,b	;volatile
   981  000078                     i2l157:
   982                           
   983                           ; BSR set to: 14
   984  000078  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   985  00007A  0011               	retfie		f
   986  00007C                     __end_of_HighISR:
   987                           	callstack 0
   988  0000                     
   989                           	psect	rparam
   990  0000                     
   991                           	psect	temp
   992  000012                     btemp:
   993                           	callstack 0
   994  000012                     	ds	1
   995  0000                     int$flags	set	btemp
   996  0000                     wtemp8	set	btemp+1
   997  0000                     ttemp5	set	btemp+1
   998  0000                     ttemp6	set	btemp+4
   999  0000                     ttemp7	set	btemp+8
  1000                           
  1001                           	psect	idloc
  1002                           
  1003                           ;Config register IDLOC0 @ 0x200000
  1004                           ;	unspecified, using default values
  1005  200000                     	org	2097152
  1006  200000  0FFF               	dw	4095
  1007                           
  1008                           ;Config register IDLOC1 @ 0x200002
  1009                           ;	unspecified, using default values
  1010  200002                     	org	2097154
  1011  200002  0FFF               	dw	4095
  1012                           
  1013                           ;Config register IDLOC2 @ 0x200004
  1014                           ;	unspecified, using default values
  1015  200004                     	org	2097156
  1016  200004  0FFF               	dw	4095
  1017                           
  1018                           ;Config register IDLOC3 @ 0x200006
  1019                           ;	unspecified, using default values
  1020  200006                     	org	2097158
  1021  200006  0FFF               	dw	4095
  1022                           
  1023                           ;Config register IDLOC4 @ 0x200008
  1024                           ;	unspecified, using default values
  1025  200008                     	org	2097160
  1026  200008  0FFF               	dw	4095
  1027                           
  1028                           ;Config register IDLOC5 @ 0x20000A
  1029                           ;	unspecified, using default values
  1030  20000A                     	org	2097162
  1031  20000A  0FFF               	dw	4095
  1032                           
  1033                           ;Config register IDLOC6 @ 0x20000C
  1034                           ;	unspecified, using default values
  1035  20000C                     	org	2097164
  1036  20000C  0FFF               	dw	4095
  1037                           
  1038                           ;Config register IDLOC7 @ 0x20000E
  1039                           ;	unspecified, using default values
  1040  20000E                     	org	2097166
  1041  20000E  0FFF               	dw	4095
  1042                           
  1043                           	psect	config
  1044                           
  1045                           ;Config register CONFIG1L @ 0x300000
  1046                           ;	External Oscillator mode Selection bits
  1047                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1048                           ;	Power-up default value for COSC bits
  1049                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1050  300000                     	org	3145728
  1051  300000  AA                 	db	170
  1052                           
  1053                           ;Config register CONFIG1H @ 0x300001
  1054                           ;	unspecified, using default values
  1055                           ;	Clock Out Enable bit
  1056                           ;	CLKOUTEN = 0x1, unprogrammed default
  1057                           ;	Clock Switch Enable bit
  1058                           ;	CSWEN = 0x1, unprogrammed default
  1059                           ;	Fail-Safe Clock Monitor Enable bit
  1060                           ;	FCMEN = 0x1, unprogrammed default
  1061  300001                     	org	3145729
  1062  300001  FF                 	db	255
  1063                           
  1064                           ;Config register CONFIG2L @ 0x300002
  1065                           ;	unspecified, using default values
  1066                           ;	Master Clear Enable bit
  1067                           ;	MCLRE = 0x1, unprogrammed default
  1068                           ;	Power-up Timer Enable bit
  1069                           ;	PWRTE = 0x1, unprogrammed default
  1070                           ;	Low-power BOR enable bit
  1071                           ;	LPBOREN = 0x1, unprogrammed default
  1072                           ;	Brown-out Reset Enable bits
  1073                           ;	BOREN = 0x3, unprogrammed default
  1074  300002                     	org	3145730
  1075  300002  FF                 	db	255
  1076                           
  1077                           ;Config register CONFIG2H @ 0x300003
  1078                           ;	unspecified, using default values
  1079                           ;	Brown Out Reset Voltage selection bits
  1080                           ;	BORV = 0x3, unprogrammed default
  1081                           ;	ZCD Disable bit
  1082                           ;	ZCD = 0x1, unprogrammed default
  1083                           ;	PPSLOCK bit One-Way Set Enable bit
  1084                           ;	PPS1WAY = 0x1, unprogrammed default
  1085                           ;	Stack Full/Underflow Reset Enable bit
  1086                           ;	STVREN = 0x1, unprogrammed default
  1087                           ;	Debugger Enable bit
  1088                           ;	DEBUG = 0x1, unprogrammed default
  1089                           ;	Extended Instruction Set Enable bit
  1090                           ;	XINST = 0x1, unprogrammed default
  1091  300003                     	org	3145731
  1092  300003  FF                 	db	255
  1093                           
  1094                           ;Config register CONFIG3L @ 0x300004
  1095                           ;	WDT Period Select bits
  1096                           ;	WDTCPS = 0x1F, unprogrammed default
  1097                           ;	WDT operating mode
  1098                           ;	WDTE = OFF, WDT Disabled
  1099  300004                     	org	3145732
  1100  300004  9F                 	db	159
  1101                           
  1102                           ;Config register CONFIG3H @ 0x300005
  1103                           ;	unspecified, using default values
  1104                           ;	WDT Window Select bits
  1105                           ;	WDTCWS = 0x7, unprogrammed default
  1106                           ;	WDT input clock selector
  1107                           ;	WDTCCS = 0x7, unprogrammed default
  1108  300005                     	org	3145733
  1109  300005  FF                 	db	255
  1110                           
  1111                           ;Config register CONFIG4L @ 0x300006
  1112                           ;	unspecified, using default values
  1113                           ;	Write Protection Block 0
  1114                           ;	WRT0 = 0x1, unprogrammed default
  1115                           ;	Write Protection Block 1
  1116                           ;	WRT1 = 0x1, unprogrammed default
  1117                           ;	Write Protection Block 2
  1118                           ;	WRT2 = 0x1, unprogrammed default
  1119                           ;	Write Protection Block 3
  1120                           ;	WRT3 = 0x1, unprogrammed default
  1121                           ;	Write Protection Block 3
  1122                           ;	WRT4 = 0x1, unprogrammed default
  1123                           ;	Write Protection Block 3
  1124                           ;	WRT5 = 0x1, unprogrammed default
  1125                           ;	Write Protection Block 3
  1126                           ;	WRT6 = 0x1, unprogrammed default
  1127                           ;	Write Protection Block 3
  1128                           ;	WRT7 = 0x1, unprogrammed default
  1129  300006                     	org	3145734
  1130  300006  FF                 	db	255
  1131                           
  1132                           ;Config register CONFIG4H @ 0x300007
  1133                           ;	unspecified, using default values
  1134                           ;	Configuration Register Write Protection bit
  1135                           ;	WRTC = 0x1, unprogrammed default
  1136                           ;	Boot Block Write Protection bit
  1137                           ;	WRTB = 0x1, unprogrammed default
  1138                           ;	Data EEPROM Write Protection bit
  1139                           ;	WRTD = 0x1, unprogrammed default
  1140                           ;	Scanner Enable bit
  1141                           ;	SCANE = 0x1, unprogrammed default
  1142                           ;	Low Voltage Programming Enable bit
  1143                           ;	LVP = 0x1, unprogrammed default
  1144  300007                     	org	3145735
  1145  300007  FF                 	db	255
  1146                           
  1147                           ;Config register CONFIG5L @ 0x300008
  1148                           ;	unspecified, using default values
  1149                           ;	UserNVM Program Memory Code Protection bit
  1150                           ;	CP = 0x1, unprogrammed default
  1151                           ;	DataNVM Memory Code Protection bit
  1152                           ;	CPD = 0x1, unprogrammed default
  1153  300008                     	org	3145736
  1154  300008  FF                 	db	255
  1155                           
  1156                           ;Config register CONFIG5H @ 0x300009
  1157                           ;	unspecified, using default values
  1158  300009                     	org	3145737
  1159  300009  FF                 	db	255
  1160                           
  1161                           ;Config register CONFIG6L @ 0x30000A
  1162                           ;	unspecified, using default values
  1163                           ;	Table Read Protection Block 0
  1164                           ;	EBTR0 = 0x1, unprogrammed default
  1165                           ;	Table Read Protection Block 1
  1166                           ;	EBTR1 = 0x1, unprogrammed default
  1167                           ;	Table Read Protection Block 2
  1168                           ;	EBTR2 = 0x1, unprogrammed default
  1169                           ;	Table Read Protection Block 3
  1170                           ;	EBTR3 = 0x1, unprogrammed default
  1171                           ;	Table Read Protection Block 4
  1172                           ;	EBTR4 = 0x1, unprogrammed default
  1173                           ;	Table Read Protection Block 5
  1174                           ;	EBTR5 = 0x1, unprogrammed default
  1175                           ;	Table Read Protection Block 6
  1176                           ;	EBTR6 = 0x1, unprogrammed default
  1177                           ;	Table Read Protection Block 7
  1178                           ;	EBTR7 = 0x1, unprogrammed default
  1179  30000A                     	org	3145738
  1180  30000A  FF                 	db	255
  1181                           
  1182                           ;Config register CONFIG6H @ 0x30000B
  1183                           ;	unspecified, using default values
  1184                           ;	Boot Block Table Read Protection bit
  1185                           ;	EBTRB = 0x1, unprogrammed default
  1186  30000B                     	org	3145739
  1187  30000B  FF                 	db	255
  1188                           tosu	equ	0xFFF
  1189                           tosh	equ	0xFFE
  1190                           tosl	equ	0xFFD
  1191                           stkptr	equ	0xFFC
  1192                           pclatu	equ	0xFFB
  1193                           pclath	equ	0xFFA
  1194                           pcl	equ	0xFF9
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           prodh	equ	0xFF4
  1200                           prodl	equ	0xFF3
  1201                           indf0	equ	0xFEF
  1202                           postinc0	equ	0xFEE
  1203                           postdec0	equ	0xFED
  1204                           preinc0	equ	0xFEC
  1205                           plusw0	equ	0xFEB
  1206                           fsr0h	equ	0xFEA
  1207                           fsr0l	equ	0xFE9
  1208                           wreg	equ	0xFE8
  1209                           indf1	equ	0xFE7
  1210                           postinc1	equ	0xFE6
  1211                           postdec1	equ	0xFE5
  1212                           preinc1	equ	0xFE4
  1213                           plusw1	equ	0xFE3
  1214                           fsr1h	equ	0xFE2
  1215                           fsr1l	equ	0xFE1
  1216                           bsr	equ	0xFE0
  1217                           indf2	equ	0xFDF
  1218                           postinc2	equ	0xFDE
  1219                           postdec2	equ	0xFDD
  1220                           preinc2	equ	0xFDC
  1221                           plusw2	equ	0xFDB
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LEDarray_disp_bin

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     480
                                              3 COMRAM     4     4      0
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     480
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRllllhh     A4      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlllllh     90      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      11       1       18.1%
BITBIGSFRhll        4A      0       0      34        0.0%
BITBIGSFRllllll     3A      0       0      43        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      8      0       0      38        0.0%
BITBIGSFRlllllh      7      0       0      41        0.0%
BITBIGSFRlllh        3      0       0      36        0.0%
BITBIGSFRlh          3      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      40        0.0%
BITBIGSFRlllllh      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      44        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Feb 04 19:01:09 2022

                       l30 021A                         l22 01C2                         l31 021C  
                       l23 01C4                         l32 0230                         l24 01D8  
                       l33 0232                         l25 01DA                         l34 0246  
                       l26 01EE                         l35 0248                         l27 01F0  
                       l19 0284                         l36 025C                         l28 0204  
                       l29 0206                         l38 025E                         l90 02AA  
                       l87 02F4                         l99 0302          ??_Interrupts_init 000C  
                      l143 0146                        l139 00F8                        l168 02CA  
                      l851 02F2                        l853 0260                        l847 02E2  
                      l849 02E8                        l881 029E                        l873 0286  
                      l883 02A0                        l875 0288                        l891 02AC  
                      l885 02A2                        l877 029A                        l893 02B4  
                      l887 02A6                        l879 029C                        l895 02BE  
                      l889 02F6                        l897 02C8                        u600 0214  
                      u601 0210                        u610 022A                        u611 0226  
                      u620 0240                        u621 023C                        u630 0256  
                      u631 0252                        u560 01BC                        u561 01B8  
                      u570 01D2                        u571 01CE                        u580 01E8  
                      u581 01E4                        u590 01FE                        u591 01FA  
                      u970 00A6                        u971 00A2                        u980 00C4  
                      u981 00C0                        u990 00DC                        u991 00D8  
                      wreg 000FE8                       l1201 0108                       l1211 0148  
                     l1203 0118                       l1061 01AE                       l1221 0194  
                     l1213 015A                       l1205 011E                       l1071 0214  
                     l1063 01BC                       l1215 016C                       l1223 019C  
                     l1207 0130                       l1073 022A                       l1065 01D2  
                     l1217 0188                       l1209 0140                       l1075 0240  
                     l1067 01E8                       l1219 018C                       l1077 0256  
                     l1069 01FE                       l1181 0088                       l1191 00B4  
                     l1183 008C                       l1193 00C4                       l1185 0094  
                     l1177 0080                       l1195 00C6                       l1187 00A6  
                     l1179 0084                       l1197 00CA                       l1189 00AC  
                     l1199 00DC                       u1000 0108                       u1001 0104  
                     u1010 0118                       u1011 0114                       u1020 0130  
                     u1021 012C                       u1030 0140                       u1031 013C  
                     u1040 015A                       u1041 0156                       u1050 016C  
                     u1051 0168                       _main 0080                       _hour 0009  
                     btemp 0012                       start 007C           __end_of_DAC_init 02F6  
          __end_of_HighISR 007C               ___param_bank 000000                 _Comp1_init 0286  
                    ?_main 000B                      i2l153 0064                      i2l154 0058  
                    i2l155 0060                      i2l157 0078                      _TMR0H 000FD4  
                    _TMR0L 000FD3                      ttemp5 0013                      ttemp6 0016  
                    ttemp7 001A                      status 000FD8                      wtemp8 0013  
          __initialization 02CC               __end_of_main 01AE                     ??_main 000E  
            __activetblptr 000000                     i2l1051 004C                     i2l1053 0072  
                   i2l1045 000A                     i2l1055 0076                     i2l1047 001A  
                   i2l1049 003E                  ??_HighISR 000B          _LEDarray_disp_bin 01AE  
       ?_LEDarray_disp_bin 000C              ??_Timer0_init 000C                ?_Comp1_init 000B  
      ??_LEDarray_disp_bin 000E                     clear_0 02D2                     _minute 000A  
                   _second 0007                     isa$std 000001                  ?_DAC_init 000B  
__end_of_LEDarray_disp_bin 0260                 __accesstop 0060    __end_of__initialization 02D8  
            ___rparam_used 000001              _LEDarray_init 0260            _Interrupts_init 02F6  
           __pcstackCOMRAM 000B        __end_of_Timer0_init 02CC                 ??_DAC_init 000C  
           ?_LEDarray_init 000B                    i2u51_40 001A                    i2u51_41 0016  
                  i2u52_40 002C                    i2u52_41 0024                    i2u54_40 004C  
                  i2u53_48 002E                    i2u54_41 0048                    i2u55_40 0072  
                  i2u55_41 006E    __end_of_Interrupts_init 0304                    _HighISR 0008  
                  __Hparam 0000                    __Lparam 0000                _Timer0_init 02AC  
                  __pcinit 02CC                    __ramtop 0E00                    __ptext0 0080  
                  __ptext1 02AC                    __ptext2 0260                    __ptext3 01AE  
                  __ptext4 02F6                    __ptext5 0286                    __ptext6 02E2  
                _CMOUTbits 000ED4                    _sun_set 0005       end_of_initialization 02D8  
          ??_LEDarray_init 000C               ??_Comp1_init 000C                    postinc0 000FEE  
                _TRISAbits 000F81                  _TRISBbits 000F82                  _TRISFbits 000F86  
                _TRISGbits 000F87                  _TRISHbits 000F88         __end_of_Comp1_init 02AC  
              _CM1CON0bits 000ED0                _CM1CON1bits 000ED1           ?_Interrupts_init 000B  
      start_initialization 02CC                __pbssCOMRAM 0001                   ?_HighISR 000B  
             ?_Timer0_init 000B                  __pintcode 0008                   _DAC_init 02E2  
                 _LATAbits 000F79                   _LATBbits 000F7A                   _LATFbits 000F7E  
                 _LATGbits 000F7F                   _LATHbits 000F80                   _PIE0bits 000E29  
                 _PIE2bits 000E2B                   _PIR0bits 000E33                   _PIR2bits 000E35  
               _CM1NCHbits 000ED2                 _CM1PCHbits 000ED3      __end_of_LEDarray_init 0286  
                 __Hrparam 0000                   __Lrparam 0000                 _T0CON0bits 000FD5  
               _T0CON1bits 000FD6    LEDarray_disp_bin@number 000C                   _min_accu 0001  
                 isa$xinst 000000                   int$flags 0012                   _sun_rise 0003  
               _INTCONbits 000FF2                   intlevel2 0000               _DAC1CON0bits 000EC6  
             _DAC1CON1bits 000EC7  
